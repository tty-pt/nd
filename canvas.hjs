let canvas = document.querySelector("canvas");
let ctx = canvas.getContext('2d');
let tilemap = document.createElement("img");
tilemap.src = "./art/tilemap.png";
tilemap.classList.add("dn");

const ACT_LOOK = 0;
const ACT_KILL = 1;
const ACT_SHOP = 2;
const ACT_DRINK = 3;
const ACT_OPEN = 4;
const ACT_CHOP = 5;
const ACT_FILL = 6;
const ACT_GET = 7;
const ACT_DIE = 8;
const ACT_PUT = 9;
const ACT_EQUIP = 10;
const ACT_DROP = 11;
const ACT_EAT = 12;
const ACT_13 = 13;
const ACT_INVENTORY = 14;

let actions_lbl = [
	"look", "kill", "shop",
	"drink", "open", "chop",
	"fill", "get", "die",
        "put", "equip", "drop",
        "eat", "reserved", "inventory",
];

let actions_init = null;
let actions_me_init = null;
let actions_other_init = null;

let actions_tiles = [];

function action_add(p, onclick) {
        let a = document.createElement("a");
        let img = document.createElement("img");
        a.classList.add("ps", "round", "c0");
        img.src = actions_tiles[p];
        img.classList.add("svl", "s_l");
        a.appendChild(img);
        a.onclick = onclick;
        act.appendChild(a);
}

function tilemap_cache() {
	let p = 0;
	for (let i = 0; i < 5; i++) {
		for (let j = 0; j < 3; j++, p++) {
			ctx.clearRect(0, 0, 16, 16);
			ctx.drawImage(tilemap, 16 * j, 16 * i,
				16, 16, 0, 0, 16, 16);

                        actions_tiles.push(canvas.toDataURL());
		}
	}

	actions_init =  function (dbref) {
		act.style.display = 'block';
		room_target = actionable[here][dbref];
		// target_lbl.innerHTML = room_target.pname;
                act.innerHTML = "";

		for (let p = 0; p < 9; p++) {
                        if (!(parseInt(room_target.actions) & (1 << p)))
                                continue;

                        let id = actions_lbl[p];
                        action_add(p, function () {
                                cmd(id + " " + room_target.name);
                        });
                }
	};

        actions_me_init = function (dbref) {
                act.style.display = 'block';
                target_target = actionable[target][dbref];
                act.innerHTML = "";

                action_add(ACT_PUT, function () {
                        output("\nPUT is not implemented yet!");
                });

                action_add(ACT_EQUIP, function () {
                        cmd("equip " + target_target.name);
                });

                action_add(ACT_DROP, function () {
                        cmd("drop " + target_target.name);
                });

                action_add(ACT_EAT, function () {
                        cmd("eat " + target_target.name);
                });
        };

        actions_other_init = function (dbref) {
                act.style.display = 'block';
                target_target = actionable[target][dbref];
                act.innerHTML = "";

                action_add(ACT_GET, function () {
                        cmd("get " + properties[target].name + "=" + target_target.name);
                });
        };

        inventory_btn.innerHTML = '';
        let img = document.createElement("img");
        img.src = actions_tiles[ACT_OPEN];
        img.classList.add("svl", "s_l");
        inventory_btn.appendChild(img);
}

tilemap.onload = function () {
	setTimeout(tilemap_cache, 0);
};
document.body.appendChild(tilemap);
